
def Node @expr @expr {|data, next|
    LS}

def list @expr {|data|
    var val = Node data null
    def , @expr {|data|
        val = Node data val
        self}
    def pr {
        var tmp = val
        while {tmp != null} {
            print (tmp data)
            tmp = tmp next
        }
    }
    LS}

var ret = list 3, 4, 5, 6, 7

print "---------------------------"
var y = ret val next next data
print y
ret pr
print "-----------end-------------"

