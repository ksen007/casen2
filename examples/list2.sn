
def Node @argument @argument {|data, next|
    LS}

def list @argument {|data|
    var val = Node data null
    def , @argument {|data|
        val = Node data val
        self}
    def pr {
        var tmp = val
        while {tmp != null} {
            print (tmp data)
            tmp = (tmp next)
        }
    }
    LS}

var ret = list 3, 4, 5, 6, 7

print "---------------------------"
print (ret val next next data)
ret pr
print "-----------end-------------"

